"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1584],{2674:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"strategy","title":"strategy","description":"Tambi\xe9n llamado: Estrategia","source":"@site/docs/strategy.md","sourceDirName":".","slug":"/strategy","permalink":"/Documentacion_Doc/docs/strategy","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/strategy.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Singleton","permalink":"/Documentacion_Doc/docs/singleton"}}');var r=a(4848),s=a(8453);const i={},o=void 0,c={},l=[{value:"Proposito",id:"proposito",level:3},{value:"Analog\xeda en el mundo real",id:"analog\xeda-en-el-mundo-real",level:2},{value:"Estructura",id:"estructura",level:2},{value:"Pseudoc\xf3digo",id:"pseudoc\xf3digo",level:2},{value:"C\xf3mo implementarlo",id:"c\xf3mo-implementarlo",level:2},{value:"Pros",id:"pros",level:2},{value:"Contras",id:"contras",level:2}];function d(e){const n={code:"code",em:"em",h2:"h2",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Tambi\xe9n llamado:"})," ",(0,r.jsx)(n.em,{children:"Estrategia"})]}),"\n",(0,r.jsx)(n.h3,{id:"proposito",children:"Proposito"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsxs)(n.em,{children:["El patr\xf3n de dise\xf1o ",(0,r.jsx)(n.em,{children:"Strategy"})," es un enfoque de comportamiento que te permite crear un conjunto de algoritmos relacionados, encapsular cada uno en su propia clase y permitir que los objetos que los usan puedan cambiar din\xe1micamente entre ellos seg\xfan sea necesario. Esto facilita la flexibilidad y el mantenimiento del c\xf3digo al separar la l\xf3gica de los algoritmos de la l\xf3gica del cliente."]})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:"https://th.bing.com/th/id/R.06300a3d6e4e5aa943a8f69b052fa6ff?rik=AECDwYm%2f3bF2eA&pid=ImgRaw&r=0",alt:"strategy"})}),"\n",(0,r.jsx)(n.h2,{id:"analog\xeda-en-el-mundo-real",children:"Analog\xeda en el mundo real"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Imagina que est\xe1s eligiendo c\xf3mo cocinar un huevo. Puedes fre\xedrlo, hervirlo o hacerlo revuelto. Cada una de estas opciones representa una estrategia de preparaci\xf3n. Seg\xfan tus preferencias de sabor, el tiempo que tienes disponible o los utensilios a tu alcance, puedes seleccionar la estrategia que mejor se adapte a la situaci\xf3n."})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:"https://files.oaiusercontent.com/file-F8obTgMTqRET4ecapPTsdV?se=2024-12-06T00%3A15%3A52Z&sp=r&sv=2024-08-04&sr=b&rscc=max-age%3D604800%2C%20immutable%2C%20private&rscd=attachment%3B%20filename%3Ded2e66b0-c58f-4a3c-96b6-e8effe46b975.webp&sig=5Vjb9upKDnW%2BPupn0DEOgL3Z%2BI9W7f/zLMssK%2BhBB9U%3D",alt:"analog\xeda"})}),"\n",(0,r.jsx)(n.h2,{id:"estructura",children:"Estructura"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:"https://refactoring.guru/images/patterns/diagrams/strategy/structure-indexed.png?id=ff55c5a6273cf82a5667f3cab5b605c7",alt:"estructura"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsxs)(n.em,{children:["La clase ",(0,r.jsx)(n.strong,{children:"Contexto"})," mantiene una referencia a una de las estrategias concretas y se comunica con este objeto \xfanicamente a trav\xe9s de la interfaz estrategia."]})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsxs)(n.em,{children:["La interfaz ",(0,r.jsx)(n.strong,{children:"Estrategia"})," es com\xfan a todas las estrategias concretas. Declara un m\xe9todo que la clase contexto utiliza para ejecutar una estrategia."]})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsxs)(n.em,{children:["Las ",(0,r.jsx)(n.strong,{children:"Estrategias Concretas"})," implementan distintas variaciones de un algoritmo que la clase contexto utiliza."]})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"La clase contexto invoca el m\xe9todo de ejecuci\xf3n en el objeto de estrategia vinculado cada vez que necesita ejecutar el algoritmo. La clase contexto no sabe con qu\xe9 tipo de estrategia funciona o c\xf3mo se ejecuta el algoritmo."})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsxs)(n.em,{children:["El ",(0,r.jsx)(n.strong,{children:"Cliente"})," crea un objeto de estrategia espec\xedfico y lo pasa a la clase contexto. La clase contexto expone un modificador set que permite a los clientes sustituir la estrategia asociada al contexto durante el tiempo de ejecuci\xf3n."]})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"pseudoc\xf3digo",children:"Pseudoc\xf3digo"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"En este ejemplo, el contexto utiliza varias estrategias para ejecutar diversas operaciones aritm\xe9ticas."})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-//",metastring:"La interfaz estrategia declara operaciones comunes a todas",children:"// las versiones soportadas de alg\xfan algoritmo. El contexto\r\n// utiliza esta interfaz para invocar el algoritmo definido por\r\n// las estrategias concretas.\r\ninterface Strategy is\r\n    method execute(a, b)\r\n\r\n// Las estrategias concretas implementan el algoritmo mientras\r\n// siguen la interfaz estrategia base. La interfaz las hace\r\n// intercambiables en el contexto.\r\nclass ConcreteStrategyAdd implements Strategy is\r\n    method execute(a, b) is\r\n        return a + b\r\n\r\nclass ConcreteStrategySubtract implements Strategy is\r\n    method execute(a, b) is\r\n        return a - b\r\n\r\nclass ConcreteStrategyMultiply implements Strategy is\r\n    method execute(a, b) is\r\n        return a * b\r\n\r\n// El contexto define la interfaz de inter\xe9s para los clientes.\r\nclass Context is\r\n    // El contexto mantiene una referencia a uno de los objetos\r\n    // de estrategia. El contexto no conoce la clase concreta de\r\n    // una estrategia. Debe trabajar con todas las estrategias a\r\n    // trav\xe9s de la interfaz estrategia.\r\n    private strategy: Strategy\r\n\r\n    // Normalmente, el contexto acepta una estrategia a trav\xe9s\r\n    // del constructor y tambi\xe9n proporciona un setter\r\n    // (modificador) para poder cambiar la estrategia durante el\r\n    // tiempo de ejecuci\xf3n.\r\n    method setStrategy(Strategy strategy) is\r\n        this.strategy = strategy\r\n\r\n    // El contexto delega parte del trabajo al objeto de\r\n    // estrategia en lugar de implementar varias versiones del\r\n    // algoritmo por su cuenta.\r\n    method executeStrategy(int a, int b) is\r\n        return strategy.execute(a, b)\r\n\r\n\r\n// El c\xf3digo cliente elige una estrategia concreta y la pasa al\r\n// contexto. El cliente debe conocer las diferencias entre\r\n// estrategias para elegir la mejor opci\xf3n.\r\nclass ExampleApplication is\r\n    method main() is\r\n        Create context object.\r\n\r\n        Read first number.\r\n        Read last number.\r\n        Read the desired action from user input.\r\n\r\n        if (action == addition) then\r\n            context.setStrategy(new ConcreteStrategyAdd())\r\n\r\n        if (action == subtraction) then\r\n            context.setStrategy(new ConcreteStrategySubtract())\r\n\r\n        if (action == multiplication) then\r\n            context.setStrategy(new ConcreteStrategyMultiply())\r\n\r\n        result = context.executeStrategy(First number, Second number)\r\n\r\n        Print result.\n"})}),"\n",(0,r.jsx)(n.h2,{id:"c\xf3mo-implementarlo",children:"C\xf3mo implementarlo"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"En la clase contexto, identifica un algoritmo que tienda a sufrir cambios frecuentes. Tambi\xe9n puede ser un enorme condicional que seleccione y ejecute una variante del mismo algoritmo durante el tiempo de ejecuci\xf3n."})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Declara la interfaz estrategia com\xfan a todas las variantes del algoritmo."})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Uno a uno, extrae todos los algoritmos y ponlos en sus propias clases. Todas deben implementar la misma interfaz estrategia."})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Los clientes de la clase contexto deben asociarla con una estrategia adecuada que coincida con la forma en la que esperan que la clase contexto realice su trabajo principal."})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:"https://th.bing.com/th/id/OIP.BSdPVU1Z7eNM5Gr_VF8hGgAAAA?rs=1&pid=ImgDetMain",alt:"implementaci\xf3n"})}),"\n",(0,r.jsx)(n.h2,{id:"pros",children:"Pros"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Puedes intercambiar algoritmos usados dentro de un objeto durante el tiempo de ejecuci\xf3n."})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Puedes aislar los detalles de implementaci\xf3n de un algoritmo del c\xf3digo que lo utiliza."})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Puedes sustituir la herencia por composici\xf3n."})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Principio de abierto/cerrado. Puedes introducir nuevas estrategias sin tener que cambiar el contexto."})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:"https://krative.digital/content/images/2023/06/Strategy-1.png",alt:"ventajas"})}),"\n",(0,r.jsx)(n.h2,{id:"contras",children:"Contras"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Si s\xf3lo tienes un par de algoritmos que raramente cambian, no hay una raz\xf3n real para complicar el programa en exceso con nuevas clases e interfaces que vengan con el patr\xf3n."})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Los clientes deben conocer las diferencias entre estrategias para poder seleccionar la adecuada."})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Muchos lenguajes de programaci\xf3n modernos tienen un soporte de tipo funcional que te permite implementar distintas versiones de un algoritmo dentro de un grupo de funciones an\xf3nimas.\r\nEntonces puedes utilizar estas funciones exactamente como habr\xedas utilizado los objetos de estrategia, pero sin saturar tu c\xf3digo con clases e interfaces adicionales."})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:"https://media.istockphoto.com/vectors/like-and-dislike-icons-set-thumb-up-symbol-finger-up-icon-like-and-vector-id1158443058?k=20&m=1158443058&s=170667a&w=0&h=MFgFP-4y4KmKgxOml7rp7EiSH4W6bRvN7Uh4zINfze0=",alt:"desventajas"})})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,a)=>{a.d(n,{R:()=>i,x:()=>o});var t=a(6540);const r={},s=t.createContext(r);function i(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);